{"ast":null,"code":"import * as api from '../api';\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["api","getPosts","dispatch","data","fetchPosts","type","FETCH_ALL","payload","error","console","log","message","createPost","post","CREATE","updatePost","id","UPDATE","deletePost","DELETE","likePost","LIKE"],"sources":["/home/divum/memories/client/src/actions/posts.js"],"sourcesContent":["import * as api from '../api';\n\n\nexport const getPosts=()=> async(dispatch)=>{\n    try{\n        const { data }= await api.fetchPosts();\n        dispatch({type:FETCH_ALL, payload:data});\n}\n    catch(error){\n        console.log(error.message)\n    }\n}\nexport const createPost=(post)=>async(dispatch)=>{\n    try {\n        const{data}=await api.createPost(post);\n        dispatch({type:CREATE,payload:data})\n        \n    } catch (error) {\n        console.log(error);\n    }\n}\nexport const updatePost=(id,post)=>async(dispatch)=>{\n    try{\n        const {data}=await api.updatePost(id,post);\n        dispatch({type:UPDATE,payload:data})\n    }\n    catch(error)\n    {\n        console.log(error.message);\n    }\n}\n\nexport const deletePost=(id)=>async(dispatch)=>{\n    try{\n        await api.deletePost(id);\n        dispatch({type:DELETE,payload:id})\n    }\n    catch(error)\n    {\n        console.log(error);\n    }\n}\nexport const likePost=(id)=>async(dispatch)=>\n{\n    try {\n        const {data}=await api.likePost(id);\n        dispatch({type:LIKE,payload:data})\n    } catch (error) {\n        console.log(error);\n    }\n}"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAG7B,OAAO,MAAMC,QAAQ,GAACA,CAAA,KAAK,MAAMC,QAAQ,IAAG;EACxC,IAAG;IACC,MAAM;MAAEC;IAAK,CAAC,GAAE,MAAMH,GAAG,CAACI,UAAU,CAAC,CAAC;IACtCF,QAAQ,CAAC;MAACG,IAAI,EAACC,SAAS;MAAEC,OAAO,EAACJ;IAAI,CAAC,CAAC;EAChD,CAAC,CACG,OAAMK,KAAK,EAAC;IACRC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC;AACD,OAAO,MAAMC,UAAU,GAAEC,IAAI,IAAG,MAAMX,QAAQ,IAAG;EAC7C,IAAI;IACA,MAAK;MAACC;IAAI,CAAC,GAAC,MAAMH,GAAG,CAACY,UAAU,CAACC,IAAI,CAAC;IACtCX,QAAQ,CAAC;MAACG,IAAI,EAACS,MAAM;MAACP,OAAO,EAACJ;IAAI,CAAC,CAAC;EAExC,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AACD,OAAO,MAAMO,UAAU,GAACA,CAACC,EAAE,EAACH,IAAI,KAAG,MAAMX,QAAQ,IAAG;EAChD,IAAG;IACC,MAAM;MAACC;IAAI,CAAC,GAAC,MAAMH,GAAG,CAACe,UAAU,CAACC,EAAE,EAACH,IAAI,CAAC;IAC1CX,QAAQ,CAAC;MAACG,IAAI,EAACY,MAAM;MAACV,OAAO,EAACJ;IAAI,CAAC,CAAC;EACxC,CAAC,CACD,OAAMK,KAAK,EACX;IACIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC;AAED,OAAO,MAAMO,UAAU,GAAEF,EAAE,IAAG,MAAMd,QAAQ,IAAG;EAC3C,IAAG;IACC,MAAMF,GAAG,CAACkB,UAAU,CAACF,EAAE,CAAC;IACxBd,QAAQ,CAAC;MAACG,IAAI,EAACc,MAAM;MAACZ,OAAO,EAACS;IAAE,CAAC,CAAC;EACtC,CAAC,CACD,OAAMR,KAAK,EACX;IACIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AACD,OAAO,MAAMY,QAAQ,GAAEJ,EAAE,IAAG,MAAMd,QAAQ,IAC1C;EACI,IAAI;IACA,MAAM;MAACC;IAAI,CAAC,GAAC,MAAMH,GAAG,CAACoB,QAAQ,CAACJ,EAAE,CAAC;IACnCd,QAAQ,CAAC;MAACG,IAAI,EAACgB,IAAI;MAACd,OAAO,EAACJ;IAAI,CAAC,CAAC;EACtC,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}